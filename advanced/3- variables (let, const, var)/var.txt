- var is function-scoped. This means a var variable is accessible throughout the function in which it is declared, even before its  declaration due to hoisting.

- If declared outside a function, it becomes a property of the global window object (in browsers).

- You can redeclare the same var variable within the same scope without error.

- var variables can be reassigned to new values.

- var declarations are HOISTED to the top of their scope. However, only the declaration is hoisted, not the initialization. So, accessing the variable before initialization gives undefined.

